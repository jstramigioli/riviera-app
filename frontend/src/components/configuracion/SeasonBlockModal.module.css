/* Modal Overlay */
.modalOverlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.6);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  padding: 20px;
  box-sizing: border-box;
}

/* Modal Content */
.modalContent {
  background: var(--color-bg-white);
  border-radius: 12px;
  width: 100%;
  max-width: 1200px;
  max-height: 90vh;
  display: flex;
  flex-direction: column;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
  animation: modalSlideIn 0.3s ease-out;
}

@keyframes modalSlideIn {
  from {
    opacity: 0;
    transform: scale(0.95) translateY(-20px);
  }
  to {
    opacity: 1;
    transform: scale(1) translateY(0);
  }
}

/* Header */
.modalHeader {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 24px 32px;
  border-bottom: 1px solid var(--color-border-light);
  background: linear-gradient(135deg, var(--color-primary) 0%, var(--color-secondary) 100%);
  color: var(--color-text-light);
  border-radius: 12px 12px 0 0;
}

.modalHeader h2 {
  margin: 0;
  font-size: 1.5rem;
  font-weight: 600;
}

.closeButton {
  background: none;
  border: none;
  color: var(--color-text-light);
  font-size: 1.5rem;
  cursor: pointer;
  padding: 8px;
  border-radius: 6px;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.2s;
}

.closeButton:hover {
  background: rgba(255, 255, 255, 0.2);
  transform: scale(1.1);
}

/* Body */
.modalBody {
  flex: 1;
  overflow: hidden;
  display: flex;
  flex-direction: column;
}

.bodyContent {
  display: grid;
  grid-template-columns: 350px 1fr;
  gap: 24px;
  padding: 24px 32px;
  flex: 1;
  overflow: hidden;
}

/* Left Column - Configuration */
.leftColumn {
  display: flex;
  flex-direction: column;
  gap: 24px;
}

.section {
  background: var(--color-bg-light);
  padding: 20px;
  border-radius: 8px;
  border: 1px solid var(--color-border-light);
}

.sectionTitle {
  font-size: 1.1rem;
  font-weight: 600;
  color: var(--color-text-dark);
  margin: 0 0 16px 0;
  display: flex;
  align-items: center;
  gap: 8px;
}

.formGroup {
  margin-bottom: 16px;
}

.formGroup:last-child {
  margin-bottom: 0;
}

.label {
  display: block;
  margin-bottom: 6px;
  font-weight: 500;
  color: var(--color-text-dark);
  font-size: 0.9rem;
}

.required::after {
  content: ' *';
  color: var(--color-danger);
}

.input, .textarea {
  width: 100%;
  padding: 10px 12px;
  border: 1px solid var(--color-border);
  border-radius: 6px;
  font-size: 0.9rem;
  transition: all 0.2s;
  box-sizing: border-box;
}

.input:focus, .textarea:focus {
  outline: none;
  border-color: var(--color-primary);
  box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
}

.input.error, .textarea.error {
  border-color: var(--color-danger);
}

.textarea {
  resize: vertical;
  min-height: 80px;
}

.errorText {
  color: var(--color-danger);
  font-size: 0.8rem;
  margin-top: 4px;
  display: block;
}

.dateGroup {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 12px;
}

/* Right Column - Tables */
.rightColumn {
  display: flex;
  flex-direction: column;
  gap: 24px;
  overflow: hidden;
}

.tableSection {
  background: var(--color-bg-white);
  border: 1px solid var(--color-border-light);
  border-radius: 8px;
  overflow: hidden;
  display: flex;
  flex-direction: column;
}

.tableSectionHeader {
  background: var(--color-bg-light);
  padding: 16px 20px;
  border-bottom: 1px solid var(--color-border-light);
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.tableSectionTitle {
  font-size: 1rem;
  font-weight: 600;
  color: var(--color-text-dark);
  margin: 0;
}

.quickActions {
  display: flex;
  gap: 8px;
}

.quickActionButton {
  background: var(--color-primary);
  color: var(--color-text-light);
  border: none;
  padding: 6px 12px;
  border-radius: 4px;
  font-size: 0.8rem;
  cursor: pointer;
  transition: all 0.2s;
}

.quickActionButton:hover {
  background: var(--color-primary-dark);
  transform: translateY(-1px);
}

.tableContainer {
  flex: 1;
  overflow: auto;
  max-height: 300px;
}

.table {
  width: 100%;
  border-collapse: collapse;
  font-size: 0.9rem;
}

.table th,
.table td {
  padding: 12px 16px;
  text-align: left;
  border-bottom: 1px solid var(--color-border-light);
}

.table th {
  background: var(--color-bg-light);
  font-weight: 600;
  color: var(--color-text-dark);
  position: sticky;
  top: 0;
  z-index: 10;
}

.table tr:hover {
  background: rgba(102, 126, 234, 0.05);
}

.roomTypeCell {
  font-weight: 500;
  color: var(--color-text-dark);
  min-width: 120px;
  position: sticky;
  left: 0;
  background: var(--color-bg-white);
  z-index: 5;
}

.table tr:hover .roomTypeCell {
  background: rgba(102, 126, 234, 0.05);
}

.priceInput {
  width: 100%;
  padding: 6px 8px;
  border: 1px solid var(--color-border);
  border-radius: 4px;
  font-size: 0.85rem;
  text-align: right;
}

.priceInput:focus {
  outline: none;
  border-color: var(--color-primary);
}

.adjustmentCell {
  min-width: 140px;
}

.adjustmentInputGroup {
  display: flex;
  align-items: center;
  gap: 6px;
}

.modeSelect {
  width: 60px;
  padding: 4px 6px;
  border: 1px solid var(--color-border);
  border-radius: 3px;
  font-size: 0.8rem;
}

.adjustmentInput {
  flex: 1;
  padding: 4px 6px;
  border: 1px solid var(--color-border);
  border-radius: 3px;
  font-size: 0.8rem;
  text-align: right;
}

.copyButton {
  background: var(--color-info);
  color: white;
  border: none;
  padding: 2px 6px;
  border-radius: 3px;
  font-size: 0.7rem;
  cursor: pointer;
  transition: all 0.2s;
}

.copyButton:hover {
  background: var(--color-info);
  transform: scale(1.05);
}

/* Footer */
.modalFooter {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 20px 32px;
  border-top: 1px solid var(--color-border-light);
  background: var(--color-bg-light);
}

.footerLeft {
  display: flex;
  gap: 12px;
}

.footerRight {
  display: flex;
  gap: 12px;
}

.button {
  padding: 10px 20px;
  border: none;
  border-radius: 6px;
  font-size: 0.9rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s;
  display: flex;
  align-items: center;
  gap: 8px;
}

.button:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

.buttonCancel {
  background: var(--color-bg-light);
  color: var(--color-text-main);
  border: 1px solid var(--color-border);
}

.buttonCancel:hover:not(:disabled) {
  background: var(--color-border-light);
}

.buttonDelete {
  background: var(--color-danger);
  color: var(--color-text-light);
}

.buttonDelete:hover:not(:disabled) {
  background: #c82333;
  transform: translateY(-1px);
}

.buttonClone {
  background: var(--color-warning);
  color: var(--color-text-light);
}

.buttonClone:hover:not(:disabled) {
  background: #e0a800;
  transform: translateY(-1px);
}

.buttonSave {
  background: var(--color-success);
  color: var(--color-text-light);
}

.buttonSave:hover:not(:disabled) {
  background: #218838;
  transform: translateY(-1px);
}

.loadingSpinner {
  width: 16px;
  height: 16px;
  border: 2px solid transparent;
  border-top: 2px solid currentColor;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

/* Loading States */
.loading {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 60px;
  color: var(--color-text-muted);
}

.error {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 60px;
  color: var(--color-danger);
  text-align: center;
}

/* Conflict Modal */
.conflictModal {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.7);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1100;
}

.conflictContent {
  background: var(--color-bg-white);
  padding: 32px;
  border-radius: 12px;
  max-width: 500px;
  width: 90%;
  text-align: center;
}

.conflictIcon {
  font-size: 3rem;
  margin-bottom: 16px;
}

.conflictTitle {
  font-size: 1.3rem;
  font-weight: 600;
  color: var(--color-text-dark);
  margin: 0 0 12px 0;
}

.conflictMessage {
  color: var(--color-text-muted);
  margin-bottom: 24px;
  line-height: 1.5;
}

.conflictActions {
  display: flex;
  gap: 12px;
  justify-content: center;
}

/* Responsive Design */
@media (max-width: 1024px) {
  .bodyContent {
    grid-template-columns: 1fr;
    gap: 16px;
  }
  
  .leftColumn {
    order: 1;
  }
  
  .rightColumn {
    order: 2;
  }
}

@media (max-width: 768px) {
  .modalContent {
    margin: 10px;
    max-height: calc(100vh - 20px);
  }
  
  .modalHeader,
  .bodyContent,
  .modalFooter {
    padding: 16px 20px;
  }
  
  .dateGroup {
    grid-template-columns: 1fr;
  }
  
  .modalFooter {
    flex-direction: column;
    gap: 16px;
  }
  
  .footerLeft,
  .footerRight {
    width: 100%;
    justify-content: center;
  }
  
  .tableContainer {
    max-height: 250px;
  }
  
  .table {
    font-size: 0.8rem;
  }
  
  .table th,
  .table td {
    padding: 8px 12px;
  }
  
  .quickActions {
    flex-wrap: wrap;
  }
  
  .quickActionButton {
    font-size: 0.75rem;
    padding: 4px 8px;
  }
}

@media (max-width: 480px) {
  .modalOverlay {
    padding: 10px;
  }
  
  .modalHeader h2 {
    font-size: 1.2rem;
  }
  
  .adjustmentInputGroup {
    flex-direction: column;
    gap: 4px;
  }
  
  .modeSelect,
  .adjustmentInput {
    width: 100%;
  }
  
  .roomTypeCell {
    min-width: 100px;
  }
  
  .adjustmentCell {
    min-width: 120px;
  }
}

/* Accessibility */
.modalContent:focus {
  outline: none;
}

.button:focus,
.input:focus,
.textarea:focus,
.modeSelect:focus,
.priceInput:focus,
.adjustmentInput:focus {
  outline: 2px solid var(--color-primary);
  outline-offset: 2px;
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .modalContent {
    border: 2px solid var(--color-text-dark);
  }
  
  .table th,
  .table td {
    border: 1px solid var(--color-text-dark);
  }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .modalContent {
    animation: none;
  }
  
  .button,
  .input,
  .closeButton,
  .quickActionButton,
  .copyButton {
    transition: none;
  }
  
  .loadingSpinner {
    animation: none;
  }
} 